< 25 ; < 20 = < 2 a nil nil > < 21 in < 1 0 nil nil > nil > > < 25 ; < 20 = < 2 b nil nil > < 21 in < 1 0 nil nil > nil > > < 25 ; < 20 = < 2 c nil nil > < 21 in < 1 0 nil nil > nil > > < 25 ; < 20 = < 2 d nil nil > < 8 - < 5 * < 2 b nil nil > < 2 b nil nil > > < 5 * < 1 4 nil nil > < 5 * < 2 a nil nil > < 2 c nil nil > > > > > < 25 ; < 20 = < 2 roots_num nil nil > < 1 0 nil nil > > < 25 ; < 20 = < 2 epsilon nil nil > < 1 0.0000001 nil nil > > < 25 ; < 20 = < 2 x1 nil nil > < 1 0 nil nil > > < 25 ; < 20 = < 2 x2 nil nil > < 1 0 nil nil > > < 25 ; < 23 if < 17 > < 2 d nil nil > < 1 0 nil nil > > < 25 ; < 23 if < 18 != < 2 EQ_0 < 2 a nil nil > nil > < 1 1 nil nil > > < 25 ; < 20 = < 2 roots_num nil nil > < 1 2 nil nil > > < 25 ; < 20 = < 2 x1 nil nil > < 6 / < 8 - < 1 0 nil nil > < 7 + < 2 b nil nil > < 9 ^ < 2 d nil nil > < 1 0.5 nil nil > > > > < 5 * < 1 2 nil nil > < 2 a nil nil > > > > < 25 ; < 20 = < 2 x2 nil nil > < 6 / < 8 - < 1 0 nil nil > < 8 - < 2 b nil nil > < 10 sqrt < 2 d nil nil > nil > > > < 5 * < 1 2 nil nil > < 2 a nil nil > > > > nil > > > > < 25 ; < 23 if < 2 EQ_0 < 2 a nil nil > nil > < 25 ; < 23 if < 18 != < 2 EQ_0 < 2 b nil nil > nil > < 1 1 nil nil > > < 25 ; < 20 = < 2 roots_num nil nil > < 1 1 nil nil > > < 25 ; < 20 = < 2 x1 nil nil > < 8 - < 1 0 nil nil > < 6 / < 2 c nil nil > < 2 b nil nil > > > > < 25 ; < 20 = < 2 x2 nil nil > < 2 x1 nil nil > > nil > > > > < 25 ; < 23 if < 2 EQ_0 < 2 b nil nil > nil > < 25 ; < 20 = < 2 roots_num nil nil > < 1 3 nil nil > > < 25 ; < 20 = < 2 x1 nil nil > < 1 0 nil nil > > < 25 ; < 20 = < 2 x2 nil nil > < 1 0 nil nil > > nil > > > > nil > > > nil > > > < 25 ; < 23 if < 2 EQ_0 < 2 d nil nil > nil > < 25 ; < 20 = < 2 roots_num nil nil > < 1 1 nil nil > > < 25 ; < 20 = < 2 x1 nil nil > < 8 - < 1 0 nil nil > < 6 / < 2 b nil nil > < 5 * < 1 2 nil nil > < 2 a nil nil > > > > > < 25 ; < 20 = < 2 x2 nil nil > < 2 x1 nil nil > > nil > > > > < 25 ; < 2 normalise < 2 x1 nil nil > nil > < 25 ; < 2 normalise < 2 x2 nil nil > nil > < 25 ; < 23 if < 16 < < 2 d nil nil > < 1 0 nil nil > > < 25 ; < 20 = < 2 roots_num nil nil > < 1 0 nil nil > > nil > > < 25 ; < 22 out < 2 roots_num nil nil > nil > < 25 ; < 23 if < 15 == < 2 roots_num nil nil > < 1 1 nil nil > > < 25 ; < 22 out < 2 x1 nil nil > nil > nil > > < 25 ; < 23 if < 15 == < 2 roots_num nil nil > < 1 2 nil nil > > < 25 ; < 22 out < 2 x1 nil nil > nil > < 25 ; < 22 out < 2 x2 nil nil > nil > nil > > > < 25 ; < 28 func < 2 EQ_0 < 2 num nil nil > < 25 ; < 29 return < 14 <= < 13 abs < 2 a nil nil > nil > < 2 epsilon nil nil > > nil > nil > > nil > < 25 ; < 28 func < 2 normalise < 2 x nil nil > < 25 ; < 23 if < 16 < < 13 abs < 2 x nil nil > nil > < 2 epsilon nil nil > > < 25 ; < 20 = < 2 x nil nil > < 1 0 nil nil > > nil > > < 25 ; < 29 return < 2 x nil nil > nil > nil > > > nil > nil > > > > > > > > > > > > > > > > > >