a = in(0);
b = in(0);
c = in(0);
//comment
d = b * b - 4 * a * c;
roots_num = 0;
epsilon = 0.0000001;
x1 = 0;
x2 = 0;
if(d > 0)
{
	if(EQ_0(a) != 1)
	{
		roots_num = 2;
		x1 = (0 - b + d^0.5)/(2*a);
		x2 = (0 - b - sqrt(d))/(2*a);
	};
	if(EQ_0(a))
	{
		if(EQ_0(b) != 1)
		{
			roots_num = 1;
			x1 = 0 - c / b;
			x2 = x1;
		};
		if(EQ_0(b))
		{
			roots_num = 3;
			x1 = 0; x2 = 0;
		};
	};
};
if(EQ_0(d))
{
	roots_num = 1;
	x1 = 0 - b / (2 * a);
	x2 = x1;
};

normalise(x1);
normalise(x2);
if(d < 0)
{
	roots_num = 0;
};
out(roots_num);
if(roots_num == 1)
{
	out(x1);
};
if(roots_num == 2)
{
	out(x1);
	out(x2);
};

func EQ_0(num)
{
	return abs(a) <= epsilon;
};

func normalise(x)
{
	if(abs(x) < epsilon)
	{
		x = 0;
	};
	return x;
};
